- commits:
    - subject: Remove helios-remote-types dependency on helios-oci
      hash: a42cf1bf19b2a686b6aff4488ee193795bc5b32c
      body: |
        It achieves this by moving ImageUri to helios_util::types which should
        be the main place for common types.

        It also removes the dependency of legacy and remote crates on mahler by
        just re-exporting mahler::Interrupt from the helios-util crate
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Use remote_input::AppTarget for local API
      hash: 25ace5d7bb1657ba4d7e5d1d8de5c1f6773f866d
      body: |
        This allows to take advantage of input validation from this type
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Create helios-remote-types with validation types
      hash: 0f2ab7c8d2f69d3308fe7f38e320bfe5eb60d0ee
      body: |
        The new crate defines `DeviceTarget`, `AppTarget`, etc., as defined by
        the remote backend. Input validations should happen at this crate.

        The types are defined in an new crate to avoid a circular dependency
        between the `helios-remote` and `helios-state` crates.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.11.5
  title: ""
  date: 2025-10-04T04:39:02.177Z
- commits:
    - subject: Rename integration folder to `helios-integration-tests`
      hash: 3c8c9663809e399f99dc706fa60330196912e955
      body: |
        Just for consistency
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.11.4
  title: ""
  date: 2025-10-03T13:44:12.673Z
- commits:
    - subject: Do not validate target release count
      hash: b92ae8095aebebbdb4f6a678f84725f0ea9a5f4f
      body: |
        The planner converts intermediate states to the target type
        while running so this validation will cause planning to fail with
        serialization errors.

        We should do this validation at some point, but it should be through a
        separate type.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Stop checking digest tag
      hash: b3d72688096c4ad0fdea386468e47c1b50b586bd
      body: |
        There is no need to rely on a `sha256-` tag for now (and it is not being
        added by anything). A future commit
        will deal with image management.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Remove support for config vars
      hash: 7ccf19a7ede6a4ab8257a562202bc5eedf4fdbb0
      body: |
        Config vars were only being consumed, but not used in any way.

        We can re-add support once we figure out how we will support those
        variables.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Statically build Regex for ImageUri
      hash: 23f3a903532b6b5ff298336776aee9da3af516ad
      body: |
        `Regex::new` can be pretty expensive and ImageUri is used a lot.
        Pre-compiling the regular expressions allows to significantly reduce
        planning time.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Omit the `latest` tag when parsing image Uris
      hash: 3478abdbf955c04e39e4418a1c7b47c423a99544
      body: |
        The tag was always being stored as `Some("latest")`. This updates the
        type to store a `latest` tag as `None`. The URI normalization still will
        use `latest`.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Send empty report
      hash: debf37234c2bc586cd54317bd330574a19d55d9a
      body: |
        Report conversion was not working yet and resulted in the backend
        removing the service installs reported by the legacy supervisor, we'll
        fix this in a future PR.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.11.3
  title: ""
  date: 2025-10-01T12:37:09.199Z
- commits:
    - subject: Fix registry auth initialization
      hash: 630c7cc7b13c89a8cd70b41f07fe92345b18cd4c
      body: |
        The RegistryAuthClient was using a RequestConfig conversion that used
        `None` as auth_token, resulting in image pull to fail every time. This
        modifies the `From` implementation to convert from `RemoteConfig` rather
        than `RequestConfig`. This also removes the conversion between
        remote::config::RequestConfig and util::request::RequestConfig that
        could lead to errors due to the name sharing.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.11.2
  title: ""
  date: 2025-09-26T15:02:48.705Z
- commits:
    - subject: Create build script for helios-util crate
      hash: ca28b1989e32c40a961a845b1533f4233a630b5c
      body: |
        The script for now sets-up the `HELIOS_PKG_NAME` compile time variable
        with the name of the main crate. This variable is used for local
        directories instead of `CARGO_PKG_NAME`.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.11.1
  title: ""
  date: 2025-09-26T04:34:57.785Z
- commits:
    - subject: Bump Rust version to 1.87 and edition to 2024
      hash: 8fc2b8890148a381de53d728a17cd0cba2cc43cb
      body: ""
      footer:
        Change-type: minor
        change-type: minor
      author: Akis Kesoglou
      nested: []
    - subject: Move helios main to a new crate
      hash: 2398696f9deda860872504697ee113c73a805e37
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-api to a new crate
      hash: 056630c57dedf73a08732ae8dfd01b5aa34c152c
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-remote to a new crate
      hash: 74278be19070e5d1f5fcf809a8c0b5b65a5f7735
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-state to a new crate
      hash: 471671f242c3cce84d2d2ad925a25a838cbd2427
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-legacy to a new crate
      hash: 000d066c5eba4573f2eac53ce19c515dd2092b01
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-oci to a new crate
      hash: 4628655250194af153b667493e06a22aefe22d97
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Improve registry configuration
      hash: e776fbbd01b16bfbddd0d4dbec7ab986d9e4bb65
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move types into helios-util
      hash: d6800f16f92952b0ed9073b439d35769d4484a49
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move config into helios-util
      hash: a6cb2b9fb9d5ef1303e0d6e08e9eaf6c62b5ddb4
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move helios-util to a new crate
      hash: 4bcb05fc5fe03df29690ee504b04dd58fd337616
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.11.0
  title: ""
  date: 2025-09-25T18:21:21.934Z
- commits:
    - subject: Move all use of Bollard into a new module
      hash: 17ee7ff4a804dcff3975eb8953563c9a2b8c6854
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move Registry into OCI module
      hash: e35be76ad1a829117c6649e39f4eedf0e92c23ed
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move Request into utils
      hash: 91aefc6b9fe754592f56a60435488e8afa200b4a
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move ImageUri into a new module
      hash: ea7c0d17cbeeea6747645e79322fc7a805743637
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.10.1
  title: ""
  date: 2025-09-23T14:25:14.518Z
- commits:
    - subject: Ignore HELIOS_REMOTE_* credentials in the container
      hash: 2665ec76da06f4695ba3c7760763f9284db16579
      body: |
        This prevents a user trying to get a device to masquerade as a separate
        device by setting UUID/KEY
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Read host OS version from CLI
      hash: 381452ca60ef592589ffd11f1cba1602b397594b
      body: >
        The information is available in the BALENA_HOST_OS_VERSION variable and

        we take advantage of that rather than trying to read the data from the

        engine that was causing a crash due to
        https://github.com/fussybeaver/bollard/issues/582
      footer:
        Change-type: minor
        change-type: minor
      author: felipe
      nested: []
    - subject: Refactor Host type into OperatingSystem
      hash: e81a8eec10fbe2c40c6dbcda53e8663d4854fe28
      body: >
        The new OperatingSystem type parses a OS version string, e.g. `balenaOS
        6.5.3+rev2` into the

        corresponding parts.


        This also removes the arch property, the architecture is a property of
        the device

        type and is used as container metadata and for contracts in the legacy

        supervisor. We'll re-evaluate adding it at that point. This commit also

        removes the `device_type` property from the `Device` type for the same

        reason.
      footer:
        Change-type: minor
        change-type: minor
      author: felipe
      nested: []
  version: 0.10.0
  title: ""
  date: 2025-09-04T07:32:02.246Z
- commits:
    - subject: Fix setup-supervisor script to use latest CLI config
      hash: 9211d355c58c5f6c84f4824022fad5a05464ebf3
      body: |
        We missed this during the CLI refactor
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.9.2
  title: ""
  date: 2025-09-02T14:57:04.676Z
- commits:
    - subject: Update README with project goals and architecture
      hash: 8bc28a64790e4a0154281d971130b47577059cbe
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
  version: 0.9.1
  title: ""
  date: 2025-09-02T09:31:28.968Z
- commits:
    - subject: Use BTreeMap rather than HashMap for models
      hash: 7d7366ddaa1e4916a5007b8324db9339c9b63feb
      body: |
        This preserves the serialization order and ensures consistency in the
        generated workflows, avoiding flakyness in the tests.
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Add clean-up tasks
      hash: 91ac5e437823a731cbdd410e67ebefc10dd92847
      body: |
        Every workflow should now start with an "ensure cleanup" task
        and finish with a "perform cleanup". This should allow that the state of
        the system (and the internal helios state) remain healthy.
      footer:
        Change-type: minor
        change-type: minor
      author: felipe
      nested: []
    - subject: Add registry credentials management
      hash: ed5ed51b8bd8d4070ebd876c46d9c0a092ff8d1d
      body: |
        This makes use of the /auth/v1/token endpoint to request a registry
        token scoped to image pulls. This allows secure access to image pulls
        without leaking the device api key.
      footer:
        Change-type: minor
        change-type: minor
      author: felipe
      nested: []
    - subject: Add task to fetch service image.
      hash: 337fcfc3a087f96faafc6a74ad172c9e104ddcb4
      body: |
        The fetch service image will re-tag any existing images with the same
        digest or pull the image otherwise. This also adds credentials handling.

        This comit updates Mahler to v0.19.5 to use the latest concurrency
        improvements and bug fixes
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add task to tag image
      hash: 6f3e2cb8326dc90350a447716e7f054ee03850a8
      body: |
        Tagging images is a necessary step when a local image with the same
        digest already exists.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add image pull/remove tasks to worker
      hash: 4bdb476b96d7aea1f72d8ee69d82db5cf266a2e5
      body: ""
      footer:
        Change-type: minor
        change-type: minor
      author: felipe
      nested: []
    - subject: Create docker::ImageUri type to handle URI manipulation
      hash: 9f2fa18ab2e10aba96bba172e1c3aed44c04c61c
      body: |
        This replaces the get_image_parts and normalise functions in
        util::docker and uses the same type for all image URI operations
      footer:
        Change-type: patch
        change-type: patch
      author: felipe
      nested: []
    - subject: Use shared docker connection
      hash: be53a0b2b8823f23e8aaf192b5eb5f5b11046a15
      body: |
        Passes docker connection from main into relevant components.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.9.0
  title: ""
  date: 2025-08-29T06:28:05.506Z
- commits:
    - subject: Remove POST /v3/device API endpoint
      hash: 3011edff6643f3f1026165375d5b6c739a096c35
      body: |
        This endpoint is a potential footgun that would allow to change the
        whole device state (including hostapps at some point). Is better to
        remove it for now as the `/v3/device/apps` endpoint already allows
        configuring/creating individual apps.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Read device state from docker engine
      hash: b84b6cd9645700c9edf5a3aaa8ae97ee7c5e9f83
      body: |
        This migrates some utility functions from the supervisor for managing
        image names
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Ignore hostapps when deserializing target state
      hash: c5997139995bfc1c19627968715fca70aa2c255b
      body: |
        Host apps will be added in a future change.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.8.0
  title: ""
  date: 2025-08-04T07:08:48.860Z
- commits:
    - subject: Set-up docker volume for configuration data
      hash: 0a0e5edb9fabffe63899dd682b51e47dc77f0608
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.7.2
  title: ""
  date: 2025-08-01T15:28:55.825Z
- commits:
    - subject: Make Uri a new serializable type
      hash: fd04113a2c4ce36f1682e3db7541229bb52f052f
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.7.1
  title: ""
  date: 2025-07-31T18:35:07.203Z
- commits:
    - subject: Make clear that proxy’s configured UUID is legacy’s UUID
      hash: ab9db675c47aabf70d4dd362ba215ea0db5d26ac
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Make proxy config legacy URI non-optional
      hash: cc09c3c1574fe9790aae2bcf11b148a1bbde9528
      body: >
        Proxy won’t be configured and run at all unless legacy_uri is non-nil,
        so paths that handled the nil case were dead code.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Implement device provisioning
      hash: 577c6ec2588d5c0e91e11e0cfe18d0b15c4f20ae
      body: |
        This partly reverts #39 and #35 in terms of how the CLI looks like.
      footer:
        Change-type: minor
        change-type: minor
      author: Akis Kesoglou
      nested: []
    - subject: Make API keys a new type
      hash: 298ca5d1bca53b034789f914208a3f06cac85b3f
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Make utility digest function
      hash: 8ede87702d783750cd3eff21507fe0de0b602c95
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.7.0
  title: ""
  date: 2025-07-30T18:16:34.667Z
- commits:
    - subject: Add some worker tests
      hash: eb18f9aa8776d7842420d15b55ce0aeda58350f8
      body: |
        Adds some basic tests to validate how the worker is calculating the
        sequence of operations. This also updates mahler to use the latest
        changes in balena-io-modules/mahler-rs#44
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.6.2
  title: ""
  date: 2025-07-29T21:43:57.483Z
- commits:
    - subject: Make get/patch interrupt an Option
      hash: a4731712c7eec7a08b60e0a4a17629534a3fae6a
      body: |
        This avoids having to pass a new interrupt that will not be used
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Remove `performing action` logs
      hash: c7c8ffe81ca1d329e0a4843da983166d2a14149e
      body: |
        The use of PollAction and SeekAction is an internal implementation
        detail that is adding noise to the logs. The Get/Patch client
        and worker instrumentation already provides information about the state
        of each loop.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Make poll request interruptible
      hash: c0be3e3831ac7782eb30263774e1e0901d1bafe8
      body: |
        While poll requests should get cancelled much less often than report
        requests, this makes both the poll and report consistent in terms of the
        context provided by the instrumentation.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Make Get request error reporting consistent with patch
      hash: 87d91af00c6d3c389a196f82d8b79a7d23779a0c
      body: |
        Clean up error messages.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Add interrupt signal to request Patch
      hash: 17b2914cedb9ffc4e30962cc17b492a63b5363c2
      body: |
        This provides more visilibity on the logs of when a report was cancelled
        because of new changes. Before this, you would just see a `close` event
        without any context.

        This also skips the initial report and just reports on changes for
        simplicity.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.6.1
  title: ""
  date: 2025-07-25T19:37:42.313Z
- commits:
    - subject: Add Start command
      hash: 78f3e3cc54f804607f07790cf45704d0b6719fdf
      body: ""
      footer:
        Change-type: minor
        change-type: minor
      author: Akis Kesoglou
      nested: []
    - subject: Use CLI directly for all configuration
      hash: 759b051ce5e1c6d6bc28ebf6529f682dd7c18273
      body: |
        There is now a single source of truth for configuring execution.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.6.0
  title: ""
  date: 2025-07-24T18:01:43.090Z
- commits:
    - subject: Split proxy into config and state cache parts
      hash: 6a6eb91a47b4984b3e9d71f9a9d75e953d1bcfa1
      body: |
        This allows us to pass around only the relevant parts of data.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Rename “fallback” to “legacy”
      hash: 2c5c8e1b52583f64ab416ba08e17dd8a95a02044
      body: >
        Refer to what we previously called “fallback” as “legacy” or “legacy
        Supervisor” as appropriate.


        “Fallback” is a good term, in that it describes what the code does (and
        not “what it is”), but “legacy” is more familiar, specific and
        semantically appropriate, as it is not suggesting that this is about
        some general feature Helios provides but is specific to allowing us to
        deploy Helios alongside the legacy Supervisor and is thus ephemeral.
      footer:
        Change-type: minor
        change-type: minor
      author: Akis Kesoglou
      nested: []
    - subject: Break up fallback into submodules
      hash: 65ffc64d078a2bffc89cbe59bc176d8dfb0b07cb
      body: >
        Also:


        - rename FallbackState into ProxyContext which better captures intent

        - use different Error enums for proxy and state update to avoid allowing
        impossible runtime states
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Turn fallback into a submodule
      hash: f4dc2a5e1dc96da00661d443c233c89792e987ee
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.5.0
  title: ""
  date: 2025-07-24T14:44:47.743Z
- commits:
    - subject: Flesh out the CLI providing defaults and encoding dependencies between
        arguments
      hash: 736a2a4be1eac1d0e8872d2c35aa43be76f9e4cc
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Stop carrying Config around and forward only necessary values
      hash: edcd3e9da7c5cf6dc2982380348838b5fb0a9291
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move register into remote
      hash: 43497f5b27dc762cfd2e186b6250f7b98c6c511c
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.4.11
  title: ""
  date: 2025-07-24T12:02:14.752Z
- commits:
    - subject: Fix the order of query/sleep in wait_for_state
      hash: 15b869d77c36a13a64d2cc7c1e41d1b592ad2e02
      body: |
        This reverts the order to what existed before #36 to communicate what is
        happening during a legacy update to the user
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Update dependencies
      hash: d423ee73707d9a46f962c4151cf3bff96a0e90c4
      body: |
        Bump version for all dependencies in Cargo.toml
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.10
  title: ""
  date: 2025-07-23T23:36:06.252Z
- commits:
    - subject: Add Interrupt argument to fallback functions
      hash: 9a9a3861c9c497f18a018ce7919bb4b5037b27e3
      body: |
        Add an explicit interrupt flag to wait_for_state_settle and
        update_legacy to remove the need to wrap those methods in a
        `tokio::select!`
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Wait for fallback state to settle on the seek loop
      hash: 332601e792c53616eacf30ad3ce447144e50b957
      body: |
        The old supervisor may be in the middle of an apply when starting the
        service, so we need the service to wait for the supervisor to report
        `applied` before applying the target locally.

        This moves the apply_future poll at the beginning of the tokio select to
        give the future a chance to complete before it gets cancelled by a new
        seek request comming from the API
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Split wait for settle step from legacy_update fn
      hash: b8d60a6bff0b234464199e92965a5478f27887f9
      body: |
        This will be used later by the seek loop
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.9
  title: ""
  date: 2025-07-23T22:32:32.933Z
- commits:
    - subject: Add API tests
      hash: bf896028c9621aa7d01f50c10c77cb64782dc1ce
      body: |
        Adds some basic tests for /v1/update and /v3/device/apps/{uuid}

        The tests check that the right values get placed on the output channels
        on POST
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Split seek and report into separate loops
      hash: 7f84240b993499df69ffb0ed97022ba191d04c38
      body: >
        - Isolates the remote dependent behavior under the remote folder

        - Removes the need for the CurrentState type with values behind RwLock

        - Removes the apply_target function, moving the state into the core loop

        - This will also make it easy to write API tests as every API endpoint
        either
          reads/writes to some channel
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Rename TargetStatus to UpdateStatus, move to seek.rs
      hash: c5f89c4fd10b09425d5eb48a45c951c2f165d89c
      body: |
        UpdateStatus is a property of the seek loop more than a device model
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.8
  title: ""
  date: 2025-07-23T18:16:09.884Z
- commits:
    - subject: Break up main poll loop into separate actions
      hash: 568583b20148a55dd01e084d2ffecdcd9357a25f
      body: |
        Similar to 0d5d40e3
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.4.7
  title: ""
  date: 2025-07-22T15:34:08.508Z
- commits:
    - subject: Break up main seek loop into separate actions
      hash: 266bf2df6219b47701b0f9b51c0c89759fdab602
      body: >
        The original motivation for this change was to get out of tokio::select
        as soon as possible because it causes issues with automatic code
        formatting and inference.


        But breaking it up this way can also help towards ultimately capturing
        the loop’s state machine in a type, which should make it more robust and
        easier to work on.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.4.6
  title: ""
  date: 2025-07-22T14:55:28.715Z
- commits:
    - subject: Merge state/poll with remote/poll
      hash: 76344c229a7df38066df7b7ca20a705ab75386e4
      body: >
        Move polling into remote so that anything that has to do with the
        backend is nested within this module.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Split poll and report into separate modules
      hash: ddf3b43fa29ca027406736a2d844e5b639696dc8
      body: >
        This is preparing the next commit which will merge everything from
        `state/poll.rs` into `remote/poll.rs`
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Split poll and seek handling into separate modules
      hash: 6a43164b158936dbac0706e9c18d8c9361b273c7
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Split Poll and Seek variants of UpdateRequest
      hash: a1a4ea9544ccaee8f9c0eac2ee7f7872dc0bca61
      body: >
        This further separates triggering/handling poll and update, and makes it
        clear which code paths handle which concern.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.4.5
  title: ""
  date: 2025-07-21T15:22:51.527Z
- commits:
    - subject: Hash URL for calculating cache filename
      hash: b4b22b6a49a0bc73e8f10644f93f3dbce73a0047
      body: |
        Uses FNV-1a hashing function
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Modify UpdateOpts to cancel by default
      hash: b7dd900e52c29d5478ab64d58b048169d4358939
      body: |
        A new call to /v1/update or a poll that result in a new target state
        should cancel whatever apply is happening and trigger a new target
        apply.

        The exception is with API arguments where the default is cancel: false
        to keep backwards compatibility.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Write/read GET request cache on disk
      hash: 9c18d36d5bc1e55d0aa246db78214627a62791b1
      body: >
        This modifies the Get client in request to store a cache of the

        response body when the response includes an ETag header. The cache
        includes

        both the body and etag and is stored using the endpoint as the

        filename. This prevents a restarting/crashing process to continuously

        poll the API.


        This also updates the core loop to use the cached state if any as the

        first target. This allows the initial target to be applied even if there
        is not

        network connection when the service start (e.g after a boot).
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.4
  title: ""
  date: 2025-07-21T07:38:02.867Z
- commits:
    - subject: Rename SupervisorError to CoreError
      hash: c41839d57494b3b702e7c80743551360831784b0
      body: |
        Make sure legacy errors terminate the program
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Split state module into state/worker/models
      hash: 39673ef6848137e1e12f84e7094c45feae49066c
      body: |
        - worker defines jobs and worker creation functions
        - models includes models for managing the internal state
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.3
  title: ""
  date: 2025-07-20T11:53:47.573Z
- commits:
    - subject: Split the main loop into poll and seek/report
      hash: 6e3fc368bb5aaefaeb6e7a7103a9830678015a0b
      body: |
        The poll loop is just disabled if running in unmanaged mode.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Re-set back-off timer on new get/patch requests
      hash: 5983c81bb24c7905a1b0e7cfff20406af34dad8d
      body: |
        This ensures the back off timer is re-set after on a new request, to
        avoid unnecessary waiting after a request is dropped.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.2
  title: ""
  date: 2025-07-18T17:49:28.174Z
- commits:
    - subject: Refactor update request management
      hash: 0cc6bbbb0c291bb0af40bdb248910e85293eb7c6
      body: |
        Replace UpdateRequest struct with enum variants (Poll/Seek) to properly
        separate polling from target seeking operations. Add request queuing to
        handle concurrent target updates and avoid busy waiting on the main
        target apply loop.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Group target apply calls into a function
      hash: 6554476e1a71d3f6feed7208a21986d4465cb6a9
      body: |
        This simplifies the loop by removing the need for tracking the mahler
        and legacy apply steps separately
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Fix busy waiting on worker stream
      hash: 03bbf2ad40ce7253af569028a9e8dd10e74cdf22
      body: |
        The stream was not reinitialized after dropping the worker so the loop
        was busy waiting since the stream would just return `None` after that
        point
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Reset the poll time after triggering new poll
      hash: f9d64ad021e440940c2c9c9273a080cf6603166a
      body: |
        The use of `is_poll_pending` was equivalent to busy waiting and keeping
        the CPU spinning at a 100%. This change makes it so the poll interval is
        re-set before and after each poll_future return so the timer will only
        be ignored during the time the target state is applying (will be fixed
        in an new commit).
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.4.1
  title: ""
  date: 2025-07-18T11:37:30.700Z
- commits:
    - subject: Use socket rather than host networking
      hash: 215e1d0d6285ac5636de7ef7dd8e8d945dfa5a40
      body: |
        This allows to remove the need for host networking by listening on
        /tmp/balena-supervisor/helios.sock by default (avoiding the clash with a
        supervisor running on port 48484) and allowing to optionally
        expose the socket to the network via socat (or other mechanism).
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add configuration option to listen from Unix socket
      hash: 974a8d6eafc19b946f2bed287cd49f5d8aec0532
      body: |
        This updates the `--local-address` CLI option to accept either a
        `<IP>:<PORT>` pair or a path to a unix socket.

        The Unix socket option will be used by the containerized version of the
        service to avoid the need for host networking.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
  version: 0.4.0
  title: ""
  date: 2025-07-16T18:41:14.316Z
- commits:
    - subject: Make state endpoint request helpers private to remote module
      hash: 78f4f73eaf82661053545066bbf6082f760ee287
      body: >
        It was previously tempting to either try to use Get/Patch directly as
        general request helpers, or add unrelated functionality (like we did by
        adding `make_uri` et al) to the request module.


        This moves request as a private submodule of remote, being its sole
        client/user.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.5
  title: ""
  date: 2025-07-16T16:35:11.413Z
- commits:
    - subject: Streamline CLI and config loading
      hash: 29c0442b7e29e0ee44e1b5a4cebac63525fa81b7
      body: >
        This basically makes Config completely inert and moves responsibility
        for congiuration to the primary (and currently *only*) entry point — the
        CLI.


        It also streamlines command handling — the CLI only defines the
        necessary arguments and main() dispatches the command using this input.


        It also does a bit of clean up by making some things that shouldn’t be
        exported private and reduces imports.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.4
  title: ""
  date: 2025-07-16T15:28:23.605Z
- commits:
    - subject: Streamline update options
      hash: 3aefcec8e822ffc43d88c83a8f814922be3eee27
      body: >
        Moves the update options struct to where it belongs: the target state
        main loop.


        This has the following effects:


        - Fallback now doesn’t have crate dependencies at all (besides
        `request`) which isolates it even more and makes it trivial to delete in
        the future.

        - More importantly, when update options are added or deleted, there’s
        only one place to define them (previously, UpdateRequest had its own set
        of options that were separate, and we transformed back and forth between
        those and UpdateOpts)
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.3.3
  title: ""
  date: 2025-07-15T13:53:45.086Z
- commits:
    - subject: Fix intrumentation call hierarchy
      hash: 2d8f8a899ff55647acc73ed55c11aeef461e241b
      body: |
        The changes in 5708472c3f0f9bcd11e7bc1954b8362ba788b7d3 messed with the
        hierarchy of calls shown in the logs. This fixes that issue
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.2
  title: ""
  date: 2025-07-14T21:40:13.486Z
- commits:
    - subject: Fix the reset_interval function on the request module
      hash: 5e82890eb29eaaf2e94b0c8b5c349ca61ea83b8b
      body: |
        The function is meant to ensure that the next request doesn't happen
        before the min_interval even if the future is dropped, but it was
        re-setting the backoff timer instead.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Improve instrumentation of poll_remote/send_report functions
      hash: 5708472c3f0f9bcd11e7bc1954b8362ba788b7d3
      body: |
        We don't really want to log every time the function is called as that
        doesn't provide useful information when running in unmanaged mode.

        Instead we want to enter the relevant span when initializing the actual
        API call.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.1
  title: ""
  date: 2025-07-14T19:39:19.161Z
- commits:
    - subject: Add target apply endpoints
      hash: 34f497081b14ae6e9afdbc59f49fd0f4c2303c5f
      body: |
        Adds `POST /v3/device` to set the device target state, `GET
        /v3/device/apps/{uuid}` to get the current state of an individual app,
        `POST /v3/device/apps/{uuid}` to set the target of an individual app
        and `GET /v3/status` to get the target state apply status

        This also adds some tasks to initialize the in memory state of apps and
        config coming from the API.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Set-up integration tests
      hash: b12d228555efb066ade97331c1aa6636bd8dd52d
      body: |
        This sets up docker-compose.test.yml to run tests for the API

        We use an `integration/` folder rather than `tests/` to control the
        dependendencies used by the tests and reduce compilation time.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Create GET /v3/device API endpoint
      hash: b67b9c56fa118897fbf5add574ba513e41353952
      body: |
        This endpoint allows to read the device state from the API
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Fix early exit in scripts/start-supervisor.sh
      hash: 0301d7a1934158090fade12a96f904e22e61a5c6
      body: |
        The script was exiting if supervisor were not found causing start.sh to
        exit as well.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.3.0
  title: ""
  date: 2025-07-14T16:42:11.924Z
- commits:
    - subject: Remove the need for legacy db volume
      hash: 3e54147babfe700b80c80bd84e70b245dea0187b
      body: |
        Using the old mechanism is not robust enough as the supervisor could be
        running on a older OS still with the old `resin-supervisor` directory or
        service name. The legacy volume also interferes with local testing on
        some platforms.

        The new mechanism uses the docker CLI and the existing supervisor image
        to write to the database using JavaScript.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Configure startup based on variable availability
      hash: 5df4fa8fb5b734b4c85e75282bc194e755f41a0f
      body: |
        This allows the docker service to be run in multiple contexts, including
        unmanaged or without a fallback supervisor.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.10
  title: ""
  date: 2025-07-11T15:47:22.867Z
- commits:
    - subject: Drop `hyper` and related dependencies
      hash: 8da84ac6347c257b85da0f61f07f94af9e3940f4
      body: >
        Remove direct dependency on Hyper and switch to Reqwest for network
        requests everywhere.


        Also normalize a few imports to get them from `axum`.


        Also drop `async-trait` as it was unused.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.9
  title: ""
  date: 2025-07-10T15:53:17.808Z
- commits:
    - subject: Separate remote handling code from target state handling
      hash: a7cbab71a02665457e5b17b6eda93d2a7f50eb13
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Drop `anyhow` dep and perform actual error handling/propagation
      hash: 349157836e4b66cf9b52c3f3775bfda35f45b5a0
      body: >
        `anyhow` allows basically to ignore errors and have everything bubble up
        implicitly. That’s something a critical piece of software shouldn’t do,
        but instead handle (or at least acknowledge) errors explicitly.


        The library otherwise provides marginal utility (`with_context` looks
        useful), so I’m dropping it completely to remove the temptation to use
        it.
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Move a few things around
      hash: 99d5907bdf87534d816d28942996435eae108ac5
      body: |
        Less files, less imports, less inter-dependencies, less sharing
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.8
  title: ""
  date: 2025-07-10T13:59:19.017Z
- commits:
    - subject: Simplify start script
      hash: 141c288aff0c39983db8c502a1fb3194e1b15514
      body: |
        - Moves supervisor takeover code to scripts/supervisor-takeover.sh
        - Removes the need for reading from `/mnt/boot` by relying on supervisor
          variables
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.7
  title: ""
  date: 2025-07-08T19:40:37.621Z
- commits:
    - subject: Refactor tracing instrumentation
      hash: 62c348ab774e8eae2304197375bf26d1cd7582f7
      body: >
        Move low level information to `debug` and `trace` level, and just keep
        top level

        calls in `info` level
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Remove Overrides module
      hash: 296aadb90f931385072a47015d454a8a2987d62a
      body: >
        This module was created for implementing a sort of local
        mode/livepush/target state

        replacement, but is is not necessary yet until we know how we will

        implement those features.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.6
  title: ""
  date: 2025-07-07T20:58:33.298Z
- commits:
    - subject: Cleanup main loop
      hash: dce5362ff809cf2d19a9a74148e489463d7abc89
      body: |
        This avoids nested looping and makes sure there is only one loop that
        can react to different events during the supervisor state
        poll/apply/report loop.
      footer:
        Change-type: patch
        change-type: patch
        Depends-on: balena-io-modules/mahler#36
        depends-on: balena-io-modules/mahler#36
      author: Felipe Lalanne
      nested: []
    - subject: Refactor code
      hash: 7be5de5e37256e2355997b73e7d67acdb6d4db0d
      body: |
        Moves commands implementation to `cmd/` directory and gets rid of some
        unused code.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Wait for legacy update to settle before continuing poll loop
      hash: b98769110bda643e6fa1c78836d247491a5a98e7
      body: |
        The new supervisor and old supervisor cannot be applying target state
        at the same time. Once the state is applied by helios, it need to wait
        for the fallback update to finish before continuing.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Set-up mahler
      hash: e6d7c7f44e1e5d87a55cdf8eff491956c3a8a40e
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.5
  title: ""
  date: 2025-07-07T15:46:44.317Z
- commits:
    - subject: Remove unecessary module nesting
      hash: e4064d077a198e5004533e3000198a3e92fa5487
      body: |
        Also deletes unused files
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
    - subject: Refactor Supervisor API server
      hash: 855a85a0a34e23217a6187d4278b674b776e1de5
      body: >
        - Dropped shared state

        - Simplified API server and fallback code to not know anything about
        each other
      footer:
        Change-type: patch
        change-type: patch
      author: Akis Kesoglou
      nested: []
  version: 0.2.4
  title: ""
  date: 2025-07-03T15:15:06.672Z
- commits:
    - subject: Refactor all fallback utils into its own module
      hash: 424bb2f8c610a44b880e968ef0ea5a3bfa3ce7fc
      body: |
        This removes the GlobalState (for now) and cleans up the API code
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.3
  title: ""
  date: 2025-07-01T01:44:42.399Z
- commits:
    - subject: Move caching fields from RequestState to Get struct
      hash: bb7ac8e84cbedfddfff8e8a858cb1a851160fe46
      body: >
        Move cached_state and etag fields from shared RequestState to Get struct

        since they are only used by GET requests for ETag-based caching:


        - Remove cached_state and etag from RequestState

        - Add cached_state and etag fields to Get struct

        - Rename cached_state to cached

        - Update Get::new() to initialize new caching fields

        - Update try_get() method to use local caching fields instead of
        RequestState


        This reduces memory usage for Patch instances and makes the separation

        of concerns clearer between generic request state and GET-specific
        caching.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Simplify Patch struct to use blocking interface like Get
      hash: fca0683b882e4304fbaa608d15bf4458bf103a70
      body: |
        Replace background task architecture with synchronous blocking pattern:
        - Remove async background task spawning and channel communication
        - Make patch() method require &mut self and block until completion
        - Use same retry loop pattern as Get struct with try_patch()
        - Remove PatchRequest future type and PatchError::Incomplete variant
        - Update all tests to use new blocking .await pattern
        - Remove batching and request replacement behavior

        This simplifies the API and makes Patch consistent with Get behavior.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.2
  title: ""
  date: 2025-06-30T23:26:57.584Z
- commits:
    - subject: Rename ghcr package to 'helios'
      hash: 5edae0feb86dac69b8769f537dad02b82d0a69b5
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.2.1
  title: ""
  date: 2025-06-30T21:42:59.886Z
- commits:
    - subject: Bind to local port before starting poll
      hash: 0e2bf3328fc84d70c847e68990df4866e94a1407
      body: |
        This prevents triggering a poll if the supervisor local port
        is taken.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Rename the project to Helios and update README
      hash: c20a62adf86bdf5a3c03edaf04dae5736d39b1ce
      body: |
        Do some additional configuration tweaks as well.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Simplify the main service loop
      hash: 84152451f7a57859d7a95beaa99e70761adde795
      body: |
        This removes UpdateService and moves the target state handling
        behavior to the main loop for simplicity.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Setup layered configuration approach
      hash: fa020ecdc89bc302beb4ae25564772437effabc6
      body: |
        Add layered configuration support, prioritizing command line arguments,
        then env vars then config.json in the system configuration
        directory, then defaults
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Handle /v1/update requests
      hash: a7b46d831c5f1795ecf757138eb5154da57040d0
      body: |
        The call now triggers a state poll and a subsequent notification to the
        fallback if defined
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Make remote api endpoint optional
      hash: 8793a589cd183ab80b91346bdba51aa7d80d98c6
      body: |
        No api endpoint is equivalent to unmanaged mode
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Make fallback address optional
      hash: fecb4ff1441044e5e57b3897201b49a3270ede85
      body: |
        Unsupported paths will return 404 if the fallback address is not defined
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
    - subject: Use Clap for parsing arguments and env vars
      hash: 08ab44de5bed9bc4fbef1521261ad12e9e493f41
      body: |
        This makes the binary more useful on its own without the need to run in
        a container.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
  version: 0.2.0
  title: ""
  date: 2025-06-30T20:58:21.199Z
- commits:
    - subject: Add target state overrides system
      hash: 1a0f59afa629b820fb35eaa374cf6ea23b123da2
      body: |
        Implement app-specific configuration overrides that read `override.json`
        files from /mnt/temp/apps/{app-uuid}/ and apply them to target state.
        Includes comprehensive test coverage and dependency injection for
        file system operations.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Implement target state caching and interception in proxy
      hash: b2b5b3c79d0e8d10ea8d34116bae3255439bdea2
      body: |
        Intercept /v3/device/{uuid}/state requests from legacy supervisor
        and serve from locally cached target state instead of proxying
        to remote API. Returns 503 with Retry-After: 15 when no target
        state is cached yet.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add uplink service for target state polling
      hash: 2ac811d6f4f1317b52e2cc9f4d06d9b3aaebd9d9
      body: >
        Implement UplinkService that polls target state from the API and
        notifies

        subscribers of changes. Includes jitter for load balancing, manual fetch

        triggers, and comprehensive error handling.


        - Add rand dependency for jitter calculation

        - Create link module with uplink service implementation

        - Add max_jitter_delay_ms configuration option

        - Integrate uplink service into main application flow

        - Add extensive test coverage for polling, updates, and error scenarios
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Add HTTP client functionality
      hash: 264165166132c8d6a109aa95932bde219f426144
      body: |
        Introduce new request module with comprehensive HTTP client
        capabilities including GET/POST methods, JSON handling,
        error management, and timeout configuration. Add reqwest
        and related networking dependencies to support external
        API communication and data fetching operations.
      footer:
        Change-type: minor
        change-type: minor
      author: Felipe Lalanne
      nested: []
    - subject: Refactor configuration
      hash: 7512d558497e9bce0da3dcdfd305ee3e6e13169c
      body: |
        Add some configuration variables and organize the Config type in
        preparation for adding target state poll feature.
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.1.0
  title: ""
  date: 2025-06-26T02:38:50.602Z
- commits:
    - subject: Refactor code and rename repository
      hash: 4f5bb07536d91a12c7fe5f7aa453c6c6efe60a92
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.0.3
  title: ""
  date: 2025-06-16T22:10:30.474Z
- commits:
    - subject: Setup flowzone
      hash: dc1a1b5ae91e36122d66867c0e5e127a2e2d04cf
      body: ""
      footer:
        Change-type: patch
        change-type: patch
      author: Felipe Lalanne
      nested: []
  version: 0.0.2
  title: ""
  date: 2025-06-16T17:37:45.938Z
